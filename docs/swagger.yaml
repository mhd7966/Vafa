basePath: /v0
definitions:
  inputs.GetUsersQuery:
    properties:
      page:
        default: 1
        type: integer
      size:
        default: 10
        type: integer
      status:
        default: 1
        type: integer
    type: object
  models.Response:
    properties:
      data:
        type: object
      message:
        type: string
      status:
        type: string
    type: object
  models.User:
    properties:
      first_name:
        type: string
      last_name:
        type: string
      national_id:
        type: string
      status:
        default: 1
        type: integer
    required:
    - national_id
    type: object
info:
  contact:
    email: fiber@swagger.io
    name: API Support
  description: I have no specific description
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Vafa API
  version: "1.0"
paths:
  /users:
    post:
      description: create user
      operationId: new_user
      parameters:
      - description: user
        in: body
        name: userBody
        required: true
        schema:
          $ref: '#/definitions/models.User'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            type: json
      security:
      - ApiKeyAuth: []
      summary: new user
      tags:
      - user
  /users/:
    get:
      description: return users
      operationId: get_users
      parameters:
      - default: 1
        in: query
        name: page
        type: integer
      - default: 10
        in: query
        name: size
        type: integer
      - default: 1
        in: query
        name: status
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            type: json
      summary: get users
      tags:
      - User
  /users/{id}:
    delete:
      description: delete user
      operationId: delete_user
      parameters:
      - description: user_id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            type: json
      security:
      - ApiKeyAuth: []
      summary: delete user
      tags:
      - user
    get:
      description: return user
      operationId: get_user
      parameters:
      - description: user_id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            type: json
      summary: get user
      tags:
      - user
  /users/{id}/cancel:
    put:
      description: cancel user
      operationId: cancel_user
      parameters:
      - description: user_id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            type: json
      security:
      - ApiKeyAuth: []
      summary: cancel user
      tags:
      - user
swagger: "2.0"
